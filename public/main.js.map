{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/guards/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'profile', component: ProfileComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-frontend';\n}\n","<app-navbar></app-navbar>\n\n<div class=\"container mt-3 \">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n  \n</div>\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { ValidateService } from './services/validate.service';\nimport { AuthService } from './services/auth.service';\nimport { FlashMessagesModule } from 'angular2-flash-messages';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthGuard } from './guards/auth.guard';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    FlashMessagesModule.forRoot(),\n    \n  ],\n  providers: [ValidateService,AuthService,AuthGuard],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron mt-5\">\n    <div class=\"container\">\n      <h1 class=\"display-3\">MEAN AUTH APP!</h1>\n      <p class=\"center\"><a class=\"btn btn-primary mr-3 \"  [routerLink]=\"['/login']\" href=\"#\" role=\"button\">Login &raquo;</a>\n        <a class=\"btn btn-primary \"  [routerLink]=\"['/register']\" href=\"#\" role=\"button\">Register &raquo;</a>\n        <p>\n    </p>\n     \n    </div>\n  </div>\n\n\n    <hr>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  username: String;\n  password: String;\n  dataRegister:any={}\n\n  constructor( private AuthService: AuthService,\n    private router: Router,\n    private FlashMessageService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\n  onLoginSubmit(){\n    const user = {\n      username: this.username,\n      password: this.password\n    }\n    this.AuthService.authenticateUser(user).subscribe(data =>{\n      this.dataRegister = data;\n      if(this.dataRegister.body.success ){\n        this.AuthService.storeUserData(this.dataRegister.body.token,this.dataRegister.body.user)\n        this.FlashMessageService.show('you are logged in',{cssClass:'alert-success'});\n        this.router.navigate(['/dashboard'])\n      }\n      else{\n        this.FlashMessageService.show(this.dataRegister.body.msg,{cssClass:'alert-danger'});\n        this.router.navigate(['/login'])\n      }\n    })\n  }\n}\n","<h2 class=\"page-header\">Login</h2>\n<form (submit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label for=\"username\">username</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\n    </div>\n    <div class=\"form-group\">\n        <label for=\"password\">password</label>\n        <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" class=\"btn btn-primary\" value=\"login\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(public AuthService: AuthService,\n    private router: Router,\n    private FlashMessageService: FlashMessagesService) { }\n\n  ngOnInit(): void {\n  }\nonLogoutClick(){\n  this.AuthService.logout();\n  this.FlashMessageService.show('You are logged out',{cssClass:'alert-success'});\n  this.router.navigate(['/login']);\n  return false;\n\n}\n}\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/']\">Mean Auth App</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n  \n    <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\n      <ul class=\"  navbar-nav mr-auto\">\n        <li class=\"nav-item \">\n          <a class=\"nav-link\"  [routerLinkActive]=\"['active']\"  [routerLinkActiveOptions]=\"{exact:true}\" [routerLink]=\"['/']\">Home </a>\n        </li>\n      </ul>\n      <ul class=\" navbar-nav navbar-right\">\n        <li class=\"nav-item  \" >\n          <a class=\"nav-link\" *ngIf=\"!AuthService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" [routerLink]=\"['/dashboard']\">Dashboard </a>\n        </li>\n        <li class=\"nav-item  \" >\n          <a class=\"nav-link\"   *ngIf=\"!AuthService.loggedIn()\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" [routerLink]=\"['/profile']\">Profile </a>\n        </li>\n        <li class=\"nav-item  \" >\n          <a  *ngIf=\"AuthService.loggedIn()\" class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" [routerLink]=\"['/login']\">Login </a>\n        </li>\n        <li class=\"nav-item \">\n        <a  *ngIf=\"AuthService.loggedIn()\" class=\"nav-link\" [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" [routerLink]=\"['/register']\">register </a>\n        </li>\n        <li class=\"nav-item \">\n          <a   *ngIf=\"!AuthService.loggedIn()\" class=\"nav-link\"  (click)=\"onLogoutClick()\" href=\"#\">Logout </a>\n          </li>\n      </ul>\n  \n    </div>\n   \n      \n     \n\n  </nav>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n   user: Object;\n   dataProfile:any={}\n  constructor(private AuthService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.AuthService.getProfile().subscribe(profile => {\n      this.dataProfile = profile\n      this.user = this.dataProfile.body.user;\n    },\n    err =>{\n      console.log(err);\n      return false;\n    }\n    )\n\n  }\n\n}\n","<div *ngIf = \"user\">\n  <h2 class=\"page-header\">{{user.name}}</h2>\n  <ul class=\"list-group\">\n      <li class=\"list-group-item\">Username: {{user.username}}</li>\n      <li class=\"list-group-item\">Email: {{user.email}}</li>\n\n  </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { AuthService } from '../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  name: String;\n  username: String;\n  email: String;\n  password: String;\n  dataRegister:any={}\n\n  constructor(private validateService: ValidateService,\n    private FlashMessageService: FlashMessagesService,\n    private AuthService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  OnRegisterSubmit(){\n    const user = {\n        name: this.name,\n        username: this.username,\n        email: this.email,\n        password: this.password,\n    }\n    if(!this.validateService.validateRgister(user)){\n      this.FlashMessageService.show('Please fill all the Fields',{cssClass:'alert-danger'});\n      return false;\n\n    }\n    if(!this.validateService.validateEmail(user.email)){\n      this.FlashMessageService.show('Wrong email',{cssClass:'alert-danger'});\n      return false;\n    }\n\n    this.AuthService.registerUser(user).subscribe(data =>{\n      this.dataRegister = data;\n      if(this.dataRegister.body.success ){\n        this.FlashMessageService.show('you are now registerd and you can log in',{cssClass:'alert-success'});\n        this.router.navigate(['/login'])\n      }\n      else{\n        this.FlashMessageService.show('something went wrong',{cssClass:'alert-danger'});\n        this.router.navigate(['/register'])\n      }\n    })\n  }\n\n}\n","\n<form (submit)=\"OnRegisterSubmit()\">\n    <h2 class=\"page-header \">\n        Register\n    </h2>\n    <div class=\"form-group\">\n        <label>Name</label>\n        <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Username</label>\n        <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Email</label>\n        <input type=\"email\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label>Password</label>\n        <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\">\n    </div>\n    <input type=\"submit\" class=\" btn btn-primary\" value=\"submit\">\n</form>\n","import { Injectable } from '@angular/core'\r\nimport { Router, CanActivate} from '@angular/router'\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n    constructor(private AuthService: AuthService,private router: Router){}\r\n\r\n    canActivate(){\r\n         if (!this.AuthService.loggedIn()){\r\n             return true;\r\n         }\r\n         else{\r\n             this.router.navigate(['/login']);\r\n             return false;\r\n         }\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n\n\n  constructor(private http: HttpClient) { }\n\n  registerUser(user){\n     let headers = new HttpHeaders();\n     headers.append('Content-Type','application/json');\n     return this.http.post('users/register', user, {\n      headers: headers,\n      observe: 'response'\n    }).pipe(map((res: HttpResponse<JSON>) => res));\n\n  }\n  authenticateUser(user){\n    let headers = new HttpHeaders();\n    headers.append('Content-Type','application/json');\n    return this.http.post('users/authenticate', user, {\n     headers: headers,\n     observe: 'response'\n   }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n  storeUserData(token,user){\n    localStorage.setItem('id_token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    this.authToken = token;\n    this.user = user;\n\n  }\n\n  getProfile(){\n    this.loadToken();\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': this.authToken\n    }\n    );\n    return this.http.get('users/profile', {\n     headers: headers,\n     observe: 'response'\n   }).pipe(map((res: HttpResponse<JSON>) => res));\n  }\n\n  loadToken(){\n     const token = localStorage.getItem('id_token');\n     this.authToken = token;\n  }\n\n  loggedIn(){\n    this.loadToken();\n    const helper = new JwtHelperService();\n    return helper.isTokenExpired(this.authToken); \n  }\n  logout(){\n    this.authToken = null;\n    this.user = null;\n    localStorage.clear()\n    \n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRgister(user){\n    if(user.name == undefined || user.username == undefined || user.email == undefined || user.password == undefined ) {\n      return false\n    }else{\n      return true;\n    }\n  }\n  validateEmail(email){\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}